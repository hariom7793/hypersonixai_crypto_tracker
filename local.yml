version: '3'

volumes:
  ct_db_data: {}
  ct_db_data_backups: {}

services:
  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    container_name: ct_nginx
    ports:
      - "80:80"
      # - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      # - ./certs:/etc/nginx/certs
    restart: always
    depends_on:
      - django
  django:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: ct_app
    container_name: ct_app
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: crypto_tracker_production_postgres
    container_name: ct_db
    volumes:
      - ct_db_data:/var/lib/postgresql/data:Z
      - ct_db_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: ct_docs
    container_name: ct_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./crypto_tracker:/app/crypto_tracker:z
    ports:
      - "9000:9000"
    command: /start-docs
